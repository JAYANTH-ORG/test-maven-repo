# Application Configuration with Hardcoded Secrets
# This file contains intentional secrets for security testing

# Database Configuration
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.username=sa
spring.datasource.password=admin123!@#

# External API Keys (should be detected by secret scanning)
api.openai.key=sk-1234567890abcdef1234567890abcdef1234567890abcdef1234
api.stripe.secret=sk_live_FAKE567890abcdef1234567890abcdef1234567890
api.github.token=ghp_abcdef1234567890abcdef1234567890abcdef12
api.slack.webhook=https://hooks.slack.com/services/T1234567/B1234567/abcdef1234567890abcdef12

# AWS Credentials
aws.access.key.id=AKIAIOSFODNN7EXAMPLE
aws.secret.access.key=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
aws.region=us-west-2

# JWT Configuration
jwt.secret=myJWTSecretKey123456789012345678901234567890
jwt.expiration=86400

# Encryption Keys
encryption.key=MySecretEncryptionKey123456789012
encryption.salt=MySaltValue123

# Third-party Service Credentials
sendgrid.api.key=SG.abcdef1234567890.abcdef1234567890abcdef1234567890abcdef1234567890
twilio.account.sid=ACFAKE567890abcdef1234567890abcdef
twilio.auth.token=abcdef1234567890abcdef1234567890ab

# Database URLs with credentials
mongodb.url=mongodb://admin:password123@prod-mongo.company.com:27017/maindb
redis.url=redis://user:pass123@prod-redis.company.com:6379

# SMTP Configuration
spring.mail.username=noreply@company.com
spring.mail.password=EmailPassword123!

# OAuth Secrets
oauth.google.client.secret=GOCSPX-abcdef1234567890abcdef1234567890ab
oauth.facebook.app.secret=abcdef1234567890abcdef1234567890ab

# Private Keys (PEM format)
rsa.private.key=-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEA1234567890abcdef...\n-----END RSA PRIVATE KEY-----

# API Endpoints with embedded credentials
external.service.url=https://api:secret123@external-service.com/v1
payment.gateway.url=https://merchant123:key456@payment.gateway.com/api

# Logging Configuration
logging.level.com.secureflow.test=DEBUG
logging.file.name=application.log
